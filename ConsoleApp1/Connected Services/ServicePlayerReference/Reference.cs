//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp1.ServicePlayerReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Players", Namespace="http://schemas.datacontract.org/2004/07/DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Players : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BirthDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BirthYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstSurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApp1.ServicePlayerReference.Profiles ProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondSurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateEmail {
            get {
                return this.AlternateEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateEmailField, value) != true)) {
                    this.AlternateEmailField = value;
                    this.RaisePropertyChanged("AlternateEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BirthDay {
            get {
                return this.BirthDayField;
            }
            set {
                if ((this.BirthDayField.Equals(value) != true)) {
                    this.BirthDayField = value;
                    this.RaisePropertyChanged("BirthDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthMonth {
            get {
                return this.BirthMonthField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthMonthField, value) != true)) {
                    this.BirthMonthField = value;
                    this.RaisePropertyChanged("BirthMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BirthYear {
            get {
                return this.BirthYearField;
            }
            set {
                if ((this.BirthYearField.Equals(value) != true)) {
                    this.BirthYearField = value;
                    this.RaisePropertyChanged("BirthYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstSurname {
            get {
                return this.FirstSurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstSurnameField, value) != true)) {
                    this.FirstSurnameField = value;
                    this.RaisePropertyChanged("FirstSurname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDPlayer {
            get {
                return this.IDPlayerField;
            }
            set {
                if ((this.IDPlayerField.Equals(value) != true)) {
                    this.IDPlayerField = value;
                    this.RaisePropertyChanged("IDPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainEmail {
            get {
                return this.MainEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.MainEmailField, value) != true)) {
                    this.MainEmailField = value;
                    this.RaisePropertyChanged("MainEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApp1.ServicePlayerReference.Profiles Profiles {
            get {
                return this.ProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilesField, value) != true)) {
                    this.ProfilesField = value;
                    this.RaisePropertyChanged("Profiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondSurname {
            get {
                return this.SecondSurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondSurnameField, value) != true)) {
                    this.SecondSurnameField = value;
                    this.RaisePropertyChanged("SecondSurname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profiles", Namespace="http://schemas.datacontract.org/2004/07/DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Profiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CoinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfilePictureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Coins {
            get {
                return this.CoinsField;
            }
            set {
                if ((this.CoinsField.Equals(value) != true)) {
                    this.CoinsField = value;
                    this.RaisePropertyChanged("Coins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDProfile {
            get {
                return this.IDProfileField;
            }
            set {
                if ((this.IDProfileField.Equals(value) != true)) {
                    this.IDProfileField = value;
                    this.RaisePropertyChanged("IDProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePicture {
            get {
                return this.ProfilePictureField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePictureField, value) != true)) {
                    this.ProfilePictureField = value;
                    this.RaisePropertyChanged("ProfilePicture");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicePlayerReference.IPlayer")]
    public interface IPlayer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/AddPlayer", ReplyAction="http://tempuri.org/IPlayer/AddPlayerResponse")]
        int AddPlayer(ConsoleApp1.ServicePlayerReference.Players playersTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/AddPlayer", ReplyAction="http://tempuri.org/IPlayer/AddPlayerResponse")]
        System.Threading.Tasks.Task<int> AddPlayerAsync(ConsoleApp1.ServicePlayerReference.Players playersTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayers", ReplyAction="http://tempuri.org/IPlayer/GetPlayersResponse")]
        ConsoleApp1.ServicePlayerReference.Players[] GetPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayers", ReplyAction="http://tempuri.org/IPlayer/GetPlayersResponse")]
        System.Threading.Tasks.Task<ConsoleApp1.ServicePlayerReference.Players[]> GetPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayerByID", ReplyAction="http://tempuri.org/IPlayer/GetPlayerByIDResponse")]
        string[] GetPlayerByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayerByID", ReplyAction="http://tempuri.org/IPlayer/GetPlayerByIDResponse")]
        System.Threading.Tasks.Task<string[]> GetPlayerByIDAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerChannel : ConsoleApp1.ServicePlayerReference.IPlayer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerClient : System.ServiceModel.ClientBase<ConsoleApp1.ServicePlayerReference.IPlayer>, ConsoleApp1.ServicePlayerReference.IPlayer {
        
        public PlayerClient() {
        }
        
        public PlayerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddPlayer(ConsoleApp1.ServicePlayerReference.Players playersTable) {
            return base.Channel.AddPlayer(playersTable);
        }
        
        public System.Threading.Tasks.Task<int> AddPlayerAsync(ConsoleApp1.ServicePlayerReference.Players playersTable) {
            return base.Channel.AddPlayerAsync(playersTable);
        }
        
        public ConsoleApp1.ServicePlayerReference.Players[] GetPlayers() {
            return base.Channel.GetPlayers();
        }
        
        public System.Threading.Tasks.Task<ConsoleApp1.ServicePlayerReference.Players[]> GetPlayersAsync() {
            return base.Channel.GetPlayersAsync();
        }
        
        public string[] GetPlayerByID(int ID) {
            return base.Channel.GetPlayerByID(ID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPlayerByIDAsync(int ID) {
            return base.Channel.GetPlayerByIDAsync(ID);
        }
    }
}
