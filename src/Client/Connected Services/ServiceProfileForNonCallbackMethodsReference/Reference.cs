//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceProfileForNonCallbackMethodsReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profiles", Namespace="http://schemas.datacontract.org/2004/07/Server.DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Profiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.FriendRequests[] FriendRequestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.FriendRequests[] FriendRequests1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.Players PlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.Profiles[] Profiles1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.Profiles[] Profiles2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.FriendRequests[] FriendRequests {
            get {
                return this.FriendRequestsField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendRequestsField, value) != true)) {
                    this.FriendRequestsField = value;
                    this.RaisePropertyChanged("FriendRequests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.FriendRequests[] FriendRequests1 {
            get {
                return this.FriendRequests1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FriendRequests1Field, value) != true)) {
                    this.FriendRequests1Field = value;
                    this.RaisePropertyChanged("FriendRequests1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDProfile {
            get {
                return this.IDProfileField;
            }
            set {
                if ((this.IDProfileField.Equals(value) != true)) {
                    this.IDProfileField = value;
                    this.RaisePropertyChanged("IDProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginStatus {
            get {
                return this.LoginStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginStatusField, value) != true)) {
                    this.LoginStatusField = value;
                    this.RaisePropertyChanged("LoginStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.Players Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageField, value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.Profiles[] Profiles1 {
            get {
                return this.Profiles1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profiles1Field, value) != true)) {
                    this.Profiles1Field = value;
                    this.RaisePropertyChanged("Profiles1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.Profiles[] Profiles2 {
            get {
                return this.Profiles2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profiles2Field, value) != true)) {
                    this.Profiles2Field = value;
                    this.RaisePropertyChanged("Profiles2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Players", Namespace="http://schemas.datacontract.org/2004/07/Server.DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Players : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.Profiles ProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDPlayer {
            get {
                return this.IDPlayerField;
            }
            set {
                if ((this.IDPlayerField.Equals(value) != true)) {
                    this.IDPlayerField = value;
                    this.RaisePropertyChanged("IDPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.Profiles Profiles {
            get {
                return this.ProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilesField, value) != true)) {
                    this.ProfilesField = value;
                    this.RaisePropertyChanged("Profiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surnames {
            get {
                return this.SurnamesField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnamesField, value) != true)) {
                    this.SurnamesField = value;
                    this.RaisePropertyChanged("Surnames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendRequests", Namespace="http://schemas.datacontract.org/2004/07/Server.DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class FriendRequests : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AceptationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDFriendRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.Profiles ProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.Profiles Profiles1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProfilesIDProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProfilesIDProfile1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendingStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AceptationStatus {
            get {
                return this.AceptationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AceptationStatusField, value) != true)) {
                    this.AceptationStatusField = value;
                    this.RaisePropertyChanged("AceptationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDFriendRequest {
            get {
                return this.IDFriendRequestField;
            }
            set {
                if ((this.IDFriendRequestField.Equals(value) != true)) {
                    this.IDFriendRequestField = value;
                    this.RaisePropertyChanged("IDFriendRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.Profiles Profiles {
            get {
                return this.ProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilesField, value) != true)) {
                    this.ProfilesField = value;
                    this.RaisePropertyChanged("Profiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.Profiles Profiles1 {
            get {
                return this.Profiles1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profiles1Field, value) != true)) {
                    this.Profiles1Field = value;
                    this.RaisePropertyChanged("Profiles1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProfilesIDProfile {
            get {
                return this.ProfilesIDProfileField;
            }
            set {
                if ((this.ProfilesIDProfileField.Equals(value) != true)) {
                    this.ProfilesIDProfileField = value;
                    this.RaisePropertyChanged("ProfilesIDProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProfilesIDProfile1 {
            get {
                return this.ProfilesIDProfile1Field;
            }
            set {
                if ((this.ProfilesIDProfile1Field.Equals(value) != true)) {
                    this.ProfilesIDProfile1Field = value;
                    this.RaisePropertyChanged("ProfilesIDProfile1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendingStatus {
            get {
                return this.SendingStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SendingStatusField, value) != true)) {
                    this.SendingStatusField = value;
                    this.RaisePropertyChanged("SendingStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileLoginStatuses", Namespace="http://schemas.datacontract.org/2004/07/Server.DomainStatuses")]
    public enum ProfileLoginStatuses : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Logged = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotLogged = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/Server.Domain")]
    [System.SerializableAttribute()]
    public partial class Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.Player PlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDProfile {
            get {
                return this.IDProfileField;
            }
            set {
                if ((this.IDProfileField.Equals(value) != true)) {
                    this.IDProfileField = value;
                    this.RaisePropertyChanged("IDProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginStatus {
            get {
                return this.LoginStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginStatusField, value) != true)) {
                    this.LoginStatusField = value;
                    this.RaisePropertyChanged("LoginStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.Player Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageField, value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/Server.Domain")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceProfileForNonCallbackMethodsReference.Profile ProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDPlayer {
            get {
                return this.IDPlayerField;
            }
            set {
                if ((this.IDPlayerField.Equals(value) != true)) {
                    this.IDPlayerField = value;
                    this.RaisePropertyChanged("IDPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceProfileForNonCallbackMethodsReference.Profile Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surnames {
            get {
                return this.SurnamesField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnamesField, value) != true)) {
                    this.SurnamesField = value;
                    this.RaisePropertyChanged("Surnames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DictionaryForGetConnectedProfilesAndItsPointsFromServiceMultiplayerCrossword", Namespace="http://schemas.datacontract.org/2004/07/Server.AuxiliaryDataContracts")]
    [System.SerializableAttribute()]
    public partial class DictionaryForGetConnectedProfilesAndItsPointsFromServiceMultiplayerCrossword : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceProfileForNonCallbackMethodsReference.IProfileNonCallbackMethods")]
    public interface IProfileNonCallbackMethods {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/AddProfile", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/AddProfileResponse")]
        long AddProfile(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/AddProfile", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/AddProfileResponse")]
        System.Threading.Tasks.Task<long> AddProfileAsync(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/AddScoreToProfile", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/AddScoreToProfileResponse")]
        long AddScoreToProfile(long profileID, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/AddScoreToProfile", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/AddScoreToProfileResponse")]
        System.Threading.Tasks.Task<long> AddScoreToProfileAsync(long profileID, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/ChangeLoginStatus", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/ChangeLoginStatusResponse")]
        void ChangeLoginStatus(Client.ServiceProfileForNonCallbackMethodsReference.ProfileLoginStatuses profileLoginStatus, long profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/ChangeLoginStatus", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/ChangeLoginStatusResponse")]
        System.Threading.Tasks.Task ChangeLoginStatusAsync(Client.ServiceProfileForNonCallbackMethodsReference.ProfileLoginStatuses profileLoginStatus, long profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetFriends", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetFriendsResponse")]
        Client.ServiceProfileForNonCallbackMethodsReference.Profile[] GetFriends(long profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetFriends", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetFriendsResponse")]
        System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.Profile[]> GetFriendsAsync(long profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetImageByPlayerNickname", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetImageByPlayerNicknameResponse")]
        string GetImageByPlayerNickname(string playerNickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetImageByPlayerNickname", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetImageByPlayerNicknameResponse")]
        System.Threading.Tasks.Task<string> GetImageByPlayerNicknameAsync(string playerNickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByID", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByIDResponse")]
        Client.ServiceProfileForNonCallbackMethodsReference.Profile GetProfileByID(long profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByID", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByIDResponse")]
        System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.Profile> GetProfileByIDAsync(long profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetAllProfilesAndItsScore", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetAllProfilesAndItsScoreResponse")]
        Client.ServiceProfileForNonCallbackMethodsReference.DictionaryForGetConnectedProfilesAndItsPointsFromServiceMultiplayerCrossword[] GetAllProfilesAndItsScore();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetAllProfilesAndItsScore", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetAllProfilesAndItsScoreResponse")]
        System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.DictionaryForGetConnectedProfilesAndItsPointsFromServiceMultiplayerCrossword[]> GetAllProfilesAndItsScoreAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByPlayerID", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByPlayerIDResponse")]
        Client.ServiceProfileForNonCallbackMethodsReference.Profile GetProfileByPlayerID(long playerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByPlayerID", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByPlayerIDResponse")]
        System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.Profile> GetProfileByPlayerIDAsync(long playerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByPlayerNickname", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByPlayerNicknameResponse")]
        Client.ServiceProfileForNonCallbackMethodsReference.Profile GetProfileByPlayerNickname(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByPlayerNickname", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/GetProfileByPlayerNicknameResponse")]
        System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.Profile> GetProfileByPlayerNicknameAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/ModifyProfileImage", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/ModifyProfileImageResponse")]
        void ModifyProfileImage(long profileID, string newProfileImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/ModifyProfileImage", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/ModifyProfileImageResponse")]
        System.Threading.Tasks.Task ModifyProfileImageAsync(long profileID, string newProfileImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/TheProfileIsLogged", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/TheProfileIsLoggedResponse")]
        bool TheProfileIsLogged(long profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/TheProfileIsLogged", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/TheProfileIsLoggedResponse")]
        System.Threading.Tasks.Task<bool> TheProfileIsLoggedAsync(long profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/AddFriendship", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/AddFriendshipResponse")]
        void AddFriendship(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles, Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/AddFriendship", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/AddFriendshipResponse")]
        System.Threading.Tasks.Task AddFriendshipAsync(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles, Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/CancelFriendship", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/CancelFriendshipResponse")]
        void CancelFriendship(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles, Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/CancelFriendship", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/CancelFriendshipResponse")]
        System.Threading.Tasks.Task CancelFriendshipAsync(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles, Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/DeleteProfile", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/DeleteProfileResponse")]
        void DeleteProfile(long playerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileNonCallbackMethods/DeleteProfile", ReplyAction="http://tempuri.org/IProfileNonCallbackMethods/DeleteProfileResponse")]
        System.Threading.Tasks.Task DeleteProfileAsync(long playerID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfileNonCallbackMethodsChannel : Client.ServiceProfileForNonCallbackMethodsReference.IProfileNonCallbackMethods, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfileNonCallbackMethodsClient : System.ServiceModel.ClientBase<Client.ServiceProfileForNonCallbackMethodsReference.IProfileNonCallbackMethods>, Client.ServiceProfileForNonCallbackMethodsReference.IProfileNonCallbackMethods {
        
        public ProfileNonCallbackMethodsClient() {
        }
        
        public ProfileNonCallbackMethodsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfileNonCallbackMethodsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileNonCallbackMethodsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileNonCallbackMethodsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long AddProfile(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles) {
            return base.Channel.AddProfile(profiles);
        }
        
        public System.Threading.Tasks.Task<long> AddProfileAsync(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles) {
            return base.Channel.AddProfileAsync(profiles);
        }
        
        public long AddScoreToProfile(long profileID, int score) {
            return base.Channel.AddScoreToProfile(profileID, score);
        }
        
        public System.Threading.Tasks.Task<long> AddScoreToProfileAsync(long profileID, int score) {
            return base.Channel.AddScoreToProfileAsync(profileID, score);
        }
        
        public void ChangeLoginStatus(Client.ServiceProfileForNonCallbackMethodsReference.ProfileLoginStatuses profileLoginStatus, long profileID) {
            base.Channel.ChangeLoginStatus(profileLoginStatus, profileID);
        }
        
        public System.Threading.Tasks.Task ChangeLoginStatusAsync(Client.ServiceProfileForNonCallbackMethodsReference.ProfileLoginStatuses profileLoginStatus, long profileID) {
            return base.Channel.ChangeLoginStatusAsync(profileLoginStatus, profileID);
        }
        
        public Client.ServiceProfileForNonCallbackMethodsReference.Profile[] GetFriends(long profileID) {
            return base.Channel.GetFriends(profileID);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.Profile[]> GetFriendsAsync(long profileID) {
            return base.Channel.GetFriendsAsync(profileID);
        }
        
        public string GetImageByPlayerNickname(string playerNickname) {
            return base.Channel.GetImageByPlayerNickname(playerNickname);
        }
        
        public System.Threading.Tasks.Task<string> GetImageByPlayerNicknameAsync(string playerNickname) {
            return base.Channel.GetImageByPlayerNicknameAsync(playerNickname);
        }
        
        public Client.ServiceProfileForNonCallbackMethodsReference.Profile GetProfileByID(long profileID) {
            return base.Channel.GetProfileByID(profileID);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.Profile> GetProfileByIDAsync(long profileID) {
            return base.Channel.GetProfileByIDAsync(profileID);
        }
        
        public Client.ServiceProfileForNonCallbackMethodsReference.DictionaryForGetConnectedProfilesAndItsPointsFromServiceMultiplayerCrossword[] GetAllProfilesAndItsScore() {
            return base.Channel.GetAllProfilesAndItsScore();
        }
        
        public System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.DictionaryForGetConnectedProfilesAndItsPointsFromServiceMultiplayerCrossword[]> GetAllProfilesAndItsScoreAsync() {
            return base.Channel.GetAllProfilesAndItsScoreAsync();
        }
        
        public Client.ServiceProfileForNonCallbackMethodsReference.Profile GetProfileByPlayerID(long playerID) {
            return base.Channel.GetProfileByPlayerID(playerID);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.Profile> GetProfileByPlayerIDAsync(long playerID) {
            return base.Channel.GetProfileByPlayerIDAsync(playerID);
        }
        
        public Client.ServiceProfileForNonCallbackMethodsReference.Profile GetProfileByPlayerNickname(string nickname) {
            return base.Channel.GetProfileByPlayerNickname(nickname);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceProfileForNonCallbackMethodsReference.Profile> GetProfileByPlayerNicknameAsync(string nickname) {
            return base.Channel.GetProfileByPlayerNicknameAsync(nickname);
        }
        
        public void ModifyProfileImage(long profileID, string newProfileImage) {
            base.Channel.ModifyProfileImage(profileID, newProfileImage);
        }
        
        public System.Threading.Tasks.Task ModifyProfileImageAsync(long profileID, string newProfileImage) {
            return base.Channel.ModifyProfileImageAsync(profileID, newProfileImage);
        }
        
        public bool TheProfileIsLogged(long profileID) {
            return base.Channel.TheProfileIsLogged(profileID);
        }
        
        public System.Threading.Tasks.Task<bool> TheProfileIsLoggedAsync(long profileID) {
            return base.Channel.TheProfileIsLoggedAsync(profileID);
        }
        
        public void AddFriendship(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles, Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles1) {
            base.Channel.AddFriendship(profiles, profiles1);
        }
        
        public System.Threading.Tasks.Task AddFriendshipAsync(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles, Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles1) {
            return base.Channel.AddFriendshipAsync(profiles, profiles1);
        }
        
        public void CancelFriendship(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles, Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles1) {
            base.Channel.CancelFriendship(profiles, profiles1);
        }
        
        public System.Threading.Tasks.Task CancelFriendshipAsync(Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles, Client.ServiceProfileForNonCallbackMethodsReference.Profiles profiles1) {
            return base.Channel.CancelFriendshipAsync(profiles, profiles1);
        }
        
        public void DeleteProfile(long playerID) {
            base.Channel.DeleteProfile(playerID);
        }
        
        public System.Threading.Tasks.Task DeleteProfileAsync(long playerID) {
            return base.Channel.DeleteProfileAsync(playerID);
        }
    }
}
