//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceFriendRequestForNonCallbackMethodsReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendRequests", Namespace="http://schemas.datacontract.org/2004/07/Server.DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class FriendRequests : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AceptationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDFriendRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles ProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles Profiles1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProfilesIDProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProfilesIDProfile1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendingStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AceptationStatus {
            get {
                return this.AceptationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AceptationStatusField, value) != true)) {
                    this.AceptationStatusField = value;
                    this.RaisePropertyChanged("AceptationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDFriendRequest {
            get {
                return this.IDFriendRequestField;
            }
            set {
                if ((this.IDFriendRequestField.Equals(value) != true)) {
                    this.IDFriendRequestField = value;
                    this.RaisePropertyChanged("IDFriendRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles Profiles {
            get {
                return this.ProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilesField, value) != true)) {
                    this.ProfilesField = value;
                    this.RaisePropertyChanged("Profiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles Profiles1 {
            get {
                return this.Profiles1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profiles1Field, value) != true)) {
                    this.Profiles1Field = value;
                    this.RaisePropertyChanged("Profiles1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProfilesIDProfile {
            get {
                return this.ProfilesIDProfileField;
            }
            set {
                if ((this.ProfilesIDProfileField.Equals(value) != true)) {
                    this.ProfilesIDProfileField = value;
                    this.RaisePropertyChanged("ProfilesIDProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProfilesIDProfile1 {
            get {
                return this.ProfilesIDProfile1Field;
            }
            set {
                if ((this.ProfilesIDProfile1Field.Equals(value) != true)) {
                    this.ProfilesIDProfile1Field = value;
                    this.RaisePropertyChanged("ProfilesIDProfile1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendingStatus {
            get {
                return this.SendingStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SendingStatusField, value) != true)) {
                    this.SendingStatusField = value;
                    this.RaisePropertyChanged("SendingStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profiles", Namespace="http://schemas.datacontract.org/2004/07/Server.DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Profiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[] FriendRequestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[] FriendRequests1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Players PlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles[] Profiles1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles[] Profiles2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[] FriendRequests {
            get {
                return this.FriendRequestsField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendRequestsField, value) != true)) {
                    this.FriendRequestsField = value;
                    this.RaisePropertyChanged("FriendRequests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[] FriendRequests1 {
            get {
                return this.FriendRequests1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FriendRequests1Field, value) != true)) {
                    this.FriendRequests1Field = value;
                    this.RaisePropertyChanged("FriendRequests1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDProfile {
            get {
                return this.IDProfileField;
            }
            set {
                if ((this.IDProfileField.Equals(value) != true)) {
                    this.IDProfileField = value;
                    this.RaisePropertyChanged("IDProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginStatus {
            get {
                return this.LoginStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginStatusField, value) != true)) {
                    this.LoginStatusField = value;
                    this.RaisePropertyChanged("LoginStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Players Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageField, value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles[] Profiles1 {
            get {
                return this.Profiles1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profiles1Field, value) != true)) {
                    this.Profiles1Field = value;
                    this.RaisePropertyChanged("Profiles1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles[] Profiles2 {
            get {
                return this.Profiles2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profiles2Field, value) != true)) {
                    this.Profiles2Field = value;
                    this.RaisePropertyChanged("Profiles2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Players", Namespace="http://schemas.datacontract.org/2004/07/Server.DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Players : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles ProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDPlayer {
            get {
                return this.IDPlayerField;
            }
            set {
                if ((this.IDPlayerField.Equals(value) != true)) {
                    this.IDPlayerField = value;
                    this.RaisePropertyChanged("IDPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Profiles Profiles {
            get {
                return this.ProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilesField, value) != true)) {
                    this.ProfilesField = value;
                    this.RaisePropertyChanged("Profiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surnames {
            get {
                return this.SurnamesField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnamesField, value) != true)) {
                    this.SurnamesField = value;
                    this.RaisePropertyChanged("Surnames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendRequest", Namespace="http://schemas.datacontract.org/2004/07/Server.Domain")]
    [System.SerializableAttribute()]
    public partial class FriendRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AceptationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDFriendRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Profile ProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Profile Profile1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendingStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AceptationStatus {
            get {
                return this.AceptationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AceptationStatusField, value) != true)) {
                    this.AceptationStatusField = value;
                    this.RaisePropertyChanged("AceptationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDFriendRequest {
            get {
                return this.IDFriendRequestField;
            }
            set {
                if ((this.IDFriendRequestField.Equals(value) != true)) {
                    this.IDFriendRequestField = value;
                    this.RaisePropertyChanged("IDFriendRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Profile Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Profile Profile1 {
            get {
                return this.Profile1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profile1Field, value) != true)) {
                    this.Profile1Field = value;
                    this.RaisePropertyChanged("Profile1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendingStatus {
            get {
                return this.SendingStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SendingStatusField, value) != true)) {
                    this.SendingStatusField = value;
                    this.RaisePropertyChanged("SendingStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/Server.Domain")]
    [System.SerializableAttribute()]
    public partial class Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Player PlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDProfile {
            get {
                return this.IDProfileField;
            }
            set {
                if ((this.IDProfileField.Equals(value) != true)) {
                    this.IDProfileField = value;
                    this.RaisePropertyChanged("IDProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginStatus {
            get {
                return this.LoginStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginStatusField, value) != true)) {
                    this.LoginStatusField = value;
                    this.RaisePropertyChanged("LoginStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Player Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageField, value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/Server.Domain")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceFriendRequestForNonCallbackMethodsReference.Profile ProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDPlayer {
            get {
                return this.IDPlayerField;
            }
            set {
                if ((this.IDPlayerField.Equals(value) != true)) {
                    this.IDPlayerField = value;
                    this.RaisePropertyChanged("IDPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.Profile Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surnames {
            get {
                return this.SurnamesField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnamesField, value) != true)) {
                    this.SurnamesField = value;
                    this.RaisePropertyChanged("Surnames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceFriendRequestForNonCallbackMethodsReference.IFriendRequestNonCallbackMetho" +
        "ds")]
    public interface IFriendRequestNonCallbackMethods {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendsRequestsByProfileID" +
            "", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendsRequestsByProfileID" +
            "Response")]
        Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[] GetFriendsRequestsByProfileID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendsRequestsByProfileID" +
            "", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendsRequestsByProfileID" +
            "Response")]
        System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[]> GetFriendsRequestsByProfileIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendsRequestsByProfile1I" +
            "D", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendsRequestsByProfile1I" +
            "DResponse")]
        Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[] GetFriendsRequestsByProfile1ID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendsRequestsByProfile1I" +
            "D", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendsRequestsByProfile1I" +
            "DResponse")]
        System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[]> GetFriendsRequestsByProfile1IDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendRequestByID", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendRequestByIDResponse")]
        Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest GetFriendRequestByID(long IDFriendRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendRequestByID", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetFriendRequestByIDResponse")]
        System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest> GetFriendRequestByIDAsync(long IDFriendRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetPendientsForAceptationFrie" +
            "ndsRequestsByProfile1ID", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetPendientsForAceptationFrie" +
            "ndsRequestsByProfile1IDResponse")]
        Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest[] GetPendientsForAceptationFriendsRequestsByProfile1ID(long IDProfile1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetPendientsForAceptationFrie" +
            "ndsRequestsByProfile1ID", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetPendientsForAceptationFrie" +
            "ndsRequestsByProfile1IDResponse")]
        System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest[]> GetPendientsForAceptationFriendsRequestsByProfile1IDAsync(long IDProfile1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetSentAndPendientsForAceptat" +
            "ionFriendsRequestsByProfileID", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetSentAndPendientsForAceptat" +
            "ionFriendsRequestsByProfileIDResponse")]
        Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest[] GetSentAndPendientsForAceptationFriendsRequestsByProfileID(long IDProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/GetSentAndPendientsForAceptat" +
            "ionFriendsRequestsByProfileID", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/GetSentAndPendientsForAceptat" +
            "ionFriendsRequestsByProfileIDResponse")]
        System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest[]> GetSentAndPendientsForAceptationFriendsRequestsByProfileIDAsync(long IDProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/TheLoggedPlayerAlreadyHasSent" +
            "AFriendRequestToTheNicknameTextBoxProfile", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/TheLoggedPlayerAlreadyHasSent" +
            "AFriendRequestToTheNicknameTextBoxProfileResponse")]
        bool TheLoggedPlayerAlreadyHasSentAFriendRequestToTheNicknameTextBoxProfile(long transmitterProfileID, long receiverProfileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/TheLoggedPlayerAlreadyHasSent" +
            "AFriendRequestToTheNicknameTextBoxProfile", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/TheLoggedPlayerAlreadyHasSent" +
            "AFriendRequestToTheNicknameTextBoxProfileResponse")]
        System.Threading.Tasks.Task<bool> TheLoggedPlayerAlreadyHasSentAFriendRequestToTheNicknameTextBoxProfileAsync(long transmitterProfileID, long receiverProfileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/TheLoggedPlayerAlreadyHasRece" +
            "ivedAFriendRequestFromTheNicknameTextBoxProfile", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/TheLoggedPlayerAlreadyHasRece" +
            "ivedAFriendRequestFromTheNicknameTextBoxProfileResponse")]
        bool TheLoggedPlayerAlreadyHasReceivedAFriendRequestFromTheNicknameTextBoxProfile(long transmitterProfileID, long senderProfileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/TheLoggedPlayerAlreadyHasRece" +
            "ivedAFriendRequestFromTheNicknameTextBoxProfile", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/TheLoggedPlayerAlreadyHasRece" +
            "ivedAFriendRequestFromTheNicknameTextBoxProfileResponse")]
        System.Threading.Tasks.Task<bool> TheLoggedPlayerAlreadyHasReceivedAFriendRequestFromTheNicknameTextBoxProfileAsync(long transmitterProfileID, long senderProfileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/AddFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/AddFriendRequestResponse")]
        void AddFriendRequest(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/AddFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/AddFriendRequestResponse")]
        System.Threading.Tasks.Task AddFriendRequestAsync(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/AcceptFriendRequestResponse")]
        void AcceptFriendRequest(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/AcceptFriendRequestResponse")]
        System.Threading.Tasks.Task AcceptFriendRequestAsync(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/CancelFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/CancelFriendRequestResponse")]
        void CancelFriendRequest(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/CancelFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/CancelFriendRequestResponse")]
        System.Threading.Tasks.Task CancelFriendRequestAsync(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/RejectFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/RejectFriendRequestResponse")]
        void RejectFriendRequest(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestNonCallbackMethods/RejectFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestNonCallbackMethods/RejectFriendRequestResponse")]
        System.Threading.Tasks.Task RejectFriendRequestAsync(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendRequestNonCallbackMethodsChannel : Client.ServiceFriendRequestForNonCallbackMethodsReference.IFriendRequestNonCallbackMethods, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendRequestNonCallbackMethodsClient : System.ServiceModel.ClientBase<Client.ServiceFriendRequestForNonCallbackMethodsReference.IFriendRequestNonCallbackMethods>, Client.ServiceFriendRequestForNonCallbackMethodsReference.IFriendRequestNonCallbackMethods {
        
        public FriendRequestNonCallbackMethodsClient() {
        }
        
        public FriendRequestNonCallbackMethodsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendRequestNonCallbackMethodsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendRequestNonCallbackMethodsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendRequestNonCallbackMethodsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[] GetFriendsRequestsByProfileID(long ID) {
            return base.Channel.GetFriendsRequestsByProfileID(ID);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[]> GetFriendsRequestsByProfileIDAsync(long ID) {
            return base.Channel.GetFriendsRequestsByProfileIDAsync(ID);
        }
        
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[] GetFriendsRequestsByProfile1ID(long ID) {
            return base.Channel.GetFriendsRequestsByProfile1ID(ID);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests[]> GetFriendsRequestsByProfile1IDAsync(long ID) {
            return base.Channel.GetFriendsRequestsByProfile1IDAsync(ID);
        }
        
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest GetFriendRequestByID(long IDFriendRequest) {
            return base.Channel.GetFriendRequestByID(IDFriendRequest);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest> GetFriendRequestByIDAsync(long IDFriendRequest) {
            return base.Channel.GetFriendRequestByIDAsync(IDFriendRequest);
        }
        
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest[] GetPendientsForAceptationFriendsRequestsByProfile1ID(long IDProfile1) {
            return base.Channel.GetPendientsForAceptationFriendsRequestsByProfile1ID(IDProfile1);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest[]> GetPendientsForAceptationFriendsRequestsByProfile1IDAsync(long IDProfile1) {
            return base.Channel.GetPendientsForAceptationFriendsRequestsByProfile1IDAsync(IDProfile1);
        }
        
        public Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest[] GetSentAndPendientsForAceptationFriendsRequestsByProfileID(long IDProfile) {
            return base.Channel.GetSentAndPendientsForAceptationFriendsRequestsByProfileID(IDProfile);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequest[]> GetSentAndPendientsForAceptationFriendsRequestsByProfileIDAsync(long IDProfile) {
            return base.Channel.GetSentAndPendientsForAceptationFriendsRequestsByProfileIDAsync(IDProfile);
        }
        
        public bool TheLoggedPlayerAlreadyHasSentAFriendRequestToTheNicknameTextBoxProfile(long transmitterProfileID, long receiverProfileID) {
            return base.Channel.TheLoggedPlayerAlreadyHasSentAFriendRequestToTheNicknameTextBoxProfile(transmitterProfileID, receiverProfileID);
        }
        
        public System.Threading.Tasks.Task<bool> TheLoggedPlayerAlreadyHasSentAFriendRequestToTheNicknameTextBoxProfileAsync(long transmitterProfileID, long receiverProfileID) {
            return base.Channel.TheLoggedPlayerAlreadyHasSentAFriendRequestToTheNicknameTextBoxProfileAsync(transmitterProfileID, receiverProfileID);
        }
        
        public bool TheLoggedPlayerAlreadyHasReceivedAFriendRequestFromTheNicknameTextBoxProfile(long transmitterProfileID, long senderProfileID) {
            return base.Channel.TheLoggedPlayerAlreadyHasReceivedAFriendRequestFromTheNicknameTextBoxProfile(transmitterProfileID, senderProfileID);
        }
        
        public System.Threading.Tasks.Task<bool> TheLoggedPlayerAlreadyHasReceivedAFriendRequestFromTheNicknameTextBoxProfileAsync(long transmitterProfileID, long senderProfileID) {
            return base.Channel.TheLoggedPlayerAlreadyHasReceivedAFriendRequestFromTheNicknameTextBoxProfileAsync(transmitterProfileID, senderProfileID);
        }
        
        public void AddFriendRequest(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests) {
            base.Channel.AddFriendRequest(friendRequests);
        }
        
        public System.Threading.Tasks.Task AddFriendRequestAsync(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests) {
            return base.Channel.AddFriendRequestAsync(friendRequests);
        }
        
        public void AcceptFriendRequest(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests) {
            base.Channel.AcceptFriendRequest(friendRequests);
        }
        
        public System.Threading.Tasks.Task AcceptFriendRequestAsync(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests) {
            return base.Channel.AcceptFriendRequestAsync(friendRequests);
        }
        
        public void CancelFriendRequest(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests) {
            base.Channel.CancelFriendRequest(friendRequests);
        }
        
        public System.Threading.Tasks.Task CancelFriendRequestAsync(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests) {
            return base.Channel.CancelFriendRequestAsync(friendRequests);
        }
        
        public void RejectFriendRequest(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests) {
            base.Channel.RejectFriendRequest(friendRequests);
        }
        
        public System.Threading.Tasks.Task RejectFriendRequestAsync(Client.ServiceFriendRequestForNonCallbackMethodsReference.FriendRequests friendRequests) {
            return base.Channel.RejectFriendRequestAsync(friendRequests);
        }
    }
}
