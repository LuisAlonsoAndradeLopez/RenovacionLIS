//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceFriendRequestForCallbackMethodsReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceFriendRequestForCallbackMethodsReference.IFriendRequestCallbackMethods", CallbackContract=typeof(Client.ServiceFriendRequestForCallbackMethodsReference.IFriendRequestCallbackMethodsCallback))]
    public interface IFriendRequestCallbackMethods {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendRequestCallbackMethods/Connect")]
        void Connect(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendRequestCallbackMethods/Connect")]
        System.Threading.Tasks.Task ConnectAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendRequestCallbackMethods/Disconnect")]
        void Disconnect(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendRequestCallbackMethods/Disconnect")]
        System.Threading.Tasks.Task DisconnectAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendRequestCallbackMethods/UpdateFriendRequestsListsToAllCo" +
            "nnectedClients")]
        void UpdateFriendRequestsListsToAllConnectedClients();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendRequestCallbackMethods/UpdateFriendRequestsListsToAllCo" +
            "nnectedClients")]
        System.Threading.Tasks.Task UpdateFriendRequestsListsToAllConnectedClientsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendRequestCallbackMethodsCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendRequestCallbackMethods/UpdateFriendsRequestsLists")]
        void UpdateFriendsRequestsLists();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendRequestCallbackMethodsChannel : Client.ServiceFriendRequestForCallbackMethodsReference.IFriendRequestCallbackMethods, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendRequestCallbackMethodsClient : System.ServiceModel.DuplexClientBase<Client.ServiceFriendRequestForCallbackMethodsReference.IFriendRequestCallbackMethods>, Client.ServiceFriendRequestForCallbackMethodsReference.IFriendRequestCallbackMethods {
        
        public FriendRequestCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public FriendRequestCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public FriendRequestCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendRequestCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendRequestCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Connect(string username) {
            base.Channel.Connect(username);
        }
        
        public System.Threading.Tasks.Task ConnectAsync(string username) {
            return base.Channel.ConnectAsync(username);
        }
        
        public void Disconnect(string username) {
            base.Channel.Disconnect(username);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(string username) {
            return base.Channel.DisconnectAsync(username);
        }
        
        public void UpdateFriendRequestsListsToAllConnectedClients() {
            base.Channel.UpdateFriendRequestsListsToAllConnectedClients();
        }
        
        public System.Threading.Tasks.Task UpdateFriendRequestsListsToAllConnectedClientsAsync() {
            return base.Channel.UpdateFriendRequestsListsToAllConnectedClientsAsync();
        }
    }
}
