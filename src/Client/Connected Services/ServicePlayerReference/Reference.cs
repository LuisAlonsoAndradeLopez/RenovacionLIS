//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServicePlayerReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Players", Namespace="http://schemas.datacontract.org/2004/07/Server.DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Players : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.Profiles ProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDPlayer {
            get {
                return this.IDPlayerField;
            }
            set {
                if ((this.IDPlayerField.Equals(value) != true)) {
                    this.IDPlayerField = value;
                    this.RaisePropertyChanged("IDPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.Profiles Profiles {
            get {
                return this.ProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilesField, value) != true)) {
                    this.ProfilesField = value;
                    this.RaisePropertyChanged("Profiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surnames {
            get {
                return this.SurnamesField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnamesField, value) != true)) {
                    this.SurnamesField = value;
                    this.RaisePropertyChanged("Surnames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profiles", Namespace="http://schemas.datacontract.org/2004/07/Server.DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Profiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.FriendRequests[] FriendRequestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.FriendRequests[] FriendRequests1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.Players PlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.Profiles[] Profiles1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.Profiles[] Profiles2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.FriendRequests[] FriendRequests {
            get {
                return this.FriendRequestsField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendRequestsField, value) != true)) {
                    this.FriendRequestsField = value;
                    this.RaisePropertyChanged("FriendRequests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.FriendRequests[] FriendRequests1 {
            get {
                return this.FriendRequests1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FriendRequests1Field, value) != true)) {
                    this.FriendRequests1Field = value;
                    this.RaisePropertyChanged("FriendRequests1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDProfile {
            get {
                return this.IDProfileField;
            }
            set {
                if ((this.IDProfileField.Equals(value) != true)) {
                    this.IDProfileField = value;
                    this.RaisePropertyChanged("IDProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginStatus {
            get {
                return this.LoginStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginStatusField, value) != true)) {
                    this.LoginStatusField = value;
                    this.RaisePropertyChanged("LoginStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.Players Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageField, value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.Profiles[] Profiles1 {
            get {
                return this.Profiles1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profiles1Field, value) != true)) {
                    this.Profiles1Field = value;
                    this.RaisePropertyChanged("Profiles1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.Profiles[] Profiles2 {
            get {
                return this.Profiles2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profiles2Field, value) != true)) {
                    this.Profiles2Field = value;
                    this.RaisePropertyChanged("Profiles2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendRequests", Namespace="http://schemas.datacontract.org/2004/07/Server.DatabaseManager")]
    [System.SerializableAttribute()]
    public partial class FriendRequests : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AceptationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDFriendRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.Profiles ProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.Profiles Profiles1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendingStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AceptationStatus {
            get {
                return this.AceptationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AceptationStatusField, value) != true)) {
                    this.AceptationStatusField = value;
                    this.RaisePropertyChanged("AceptationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDFriendRequest {
            get {
                return this.IDFriendRequestField;
            }
            set {
                if ((this.IDFriendRequestField.Equals(value) != true)) {
                    this.IDFriendRequestField = value;
                    this.RaisePropertyChanged("IDFriendRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.Profiles Profiles {
            get {
                return this.ProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilesField, value) != true)) {
                    this.ProfilesField = value;
                    this.RaisePropertyChanged("Profiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.Profiles Profiles1 {
            get {
                return this.Profiles1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Profiles1Field, value) != true)) {
                    this.Profiles1Field = value;
                    this.RaisePropertyChanged("Profiles1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendingStatus {
            get {
                return this.SendingStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SendingStatusField, value) != true)) {
                    this.SendingStatusField = value;
                    this.RaisePropertyChanged("SendingStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/Server.Domain")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.Profile ProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDPlayer {
            get {
                return this.IDPlayerField;
            }
            set {
                if ((this.IDPlayerField.Equals(value) != true)) {
                    this.IDPlayerField = value;
                    this.RaisePropertyChanged("IDPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.Profile Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surnames {
            get {
                return this.SurnamesField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnamesField, value) != true)) {
                    this.SurnamesField = value;
                    this.RaisePropertyChanged("Surnames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/Server.Domain")]
    [System.SerializableAttribute()]
    public partial class Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServicePlayerReference.Player PlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDProfile {
            get {
                return this.IDProfileField;
            }
            set {
                if ((this.IDProfileField.Equals(value) != true)) {
                    this.IDProfileField = value;
                    this.RaisePropertyChanged("IDProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginStatus {
            get {
                return this.LoginStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginStatusField, value) != true)) {
                    this.LoginStatusField = value;
                    this.RaisePropertyChanged("LoginStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServicePlayerReference.Player Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageField, value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicePlayerReference.IPlayer")]
    public interface IPlayer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/AddPlayer", ReplyAction="http://tempuri.org/IPlayer/AddPlayerResponse")]
        long AddPlayer(Client.ServicePlayerReference.Players player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/AddPlayer", ReplyAction="http://tempuri.org/IPlayer/AddPlayerResponse")]
        System.Threading.Tasks.Task<long> AddPlayerAsync(Client.ServicePlayerReference.Players player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayers", ReplyAction="http://tempuri.org/IPlayer/GetPlayersResponse")]
        Client.ServicePlayerReference.Players[] GetPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayers", ReplyAction="http://tempuri.org/IPlayer/GetPlayersResponse")]
        System.Threading.Tasks.Task<Client.ServicePlayerReference.Players[]> GetPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayerByID", ReplyAction="http://tempuri.org/IPlayer/GetPlayerByIDResponse")]
        Client.ServicePlayerReference.Player GetPlayerByID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayerByID", ReplyAction="http://tempuri.org/IPlayer/GetPlayerByIDResponse")]
        System.Threading.Tasks.Task<Client.ServicePlayerReference.Player> GetPlayerByIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetSpecifiedPlayers", ReplyAction="http://tempuri.org/IPlayer/GetSpecifiedPlayersResponse")]
        Client.ServicePlayerReference.Players[] GetSpecifiedPlayers(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetSpecifiedPlayers", ReplyAction="http://tempuri.org/IPlayer/GetSpecifiedPlayersResponse")]
        System.Threading.Tasks.Task<Client.ServicePlayerReference.Players[]> GetSpecifiedPlayersAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayerByNickname", ReplyAction="http://tempuri.org/IPlayer/GetPlayerByNicknameResponse")]
        Client.ServicePlayerReference.Player GetPlayerByNickname(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayerByNickname", ReplyAction="http://tempuri.org/IPlayer/GetPlayerByNicknameResponse")]
        System.Threading.Tasks.Task<Client.ServicePlayerReference.Player> GetPlayerByNicknameAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/ModifyPlayer", ReplyAction="http://tempuri.org/IPlayer/ModifyPlayerResponse")]
        long ModifyPlayer(Client.ServicePlayerReference.Players modifiedPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/ModifyPlayer", ReplyAction="http://tempuri.org/IPlayer/ModifyPlayerResponse")]
        System.Threading.Tasks.Task<long> ModifyPlayerAsync(Client.ServicePlayerReference.Players modifiedPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/ModifyPasswordByEmail", ReplyAction="http://tempuri.org/IPlayer/ModifyPasswordByEmailResponse")]
        void ModifyPasswordByEmail(string originalEmail, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/ModifyPasswordByEmail", ReplyAction="http://tempuri.org/IPlayer/ModifyPasswordByEmailResponse")]
        System.Threading.Tasks.Task ModifyPasswordByEmailAsync(string originalEmail, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/TheEmailIsAlreadyRegisted", ReplyAction="http://tempuri.org/IPlayer/TheEmailIsAlreadyRegistedResponse")]
        bool TheEmailIsAlreadyRegisted(string emailToSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/TheEmailIsAlreadyRegisted", ReplyAction="http://tempuri.org/IPlayer/TheEmailIsAlreadyRegistedResponse")]
        System.Threading.Tasks.Task<bool> TheEmailIsAlreadyRegistedAsync(string emailToSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/TheNicknameIsAlreadyRegisted", ReplyAction="http://tempuri.org/IPlayer/TheNicknameIsAlreadyRegistedResponse")]
        bool TheNicknameIsAlreadyRegisted(string nicknameToSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/TheNicknameIsAlreadyRegisted", ReplyAction="http://tempuri.org/IPlayer/TheNicknameIsAlreadyRegistedResponse")]
        System.Threading.Tasks.Task<bool> TheNicknameIsAlreadyRegistedAsync(string nicknameToSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/DeletePlayer", ReplyAction="http://tempuri.org/IPlayer/DeletePlayerResponse")]
        void DeletePlayer(string playerNickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/DeletePlayer", ReplyAction="http://tempuri.org/IPlayer/DeletePlayerResponse")]
        System.Threading.Tasks.Task DeletePlayerAsync(string playerNickname);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerChannel : Client.ServicePlayerReference.IPlayer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerClient : System.ServiceModel.ClientBase<Client.ServicePlayerReference.IPlayer>, Client.ServicePlayerReference.IPlayer {
        
        public PlayerClient() {
        }
        
        public PlayerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long AddPlayer(Client.ServicePlayerReference.Players player) {
            return base.Channel.AddPlayer(player);
        }
        
        public System.Threading.Tasks.Task<long> AddPlayerAsync(Client.ServicePlayerReference.Players player) {
            return base.Channel.AddPlayerAsync(player);
        }
        
        public Client.ServicePlayerReference.Players[] GetPlayers() {
            return base.Channel.GetPlayers();
        }
        
        public System.Threading.Tasks.Task<Client.ServicePlayerReference.Players[]> GetPlayersAsync() {
            return base.Channel.GetPlayersAsync();
        }
        
        public Client.ServicePlayerReference.Player GetPlayerByID(long ID) {
            return base.Channel.GetPlayerByID(ID);
        }
        
        public System.Threading.Tasks.Task<Client.ServicePlayerReference.Player> GetPlayerByIDAsync(long ID) {
            return base.Channel.GetPlayerByIDAsync(ID);
        }
        
        public Client.ServicePlayerReference.Players[] GetSpecifiedPlayers(string name) {
            return base.Channel.GetSpecifiedPlayers(name);
        }
        
        public System.Threading.Tasks.Task<Client.ServicePlayerReference.Players[]> GetSpecifiedPlayersAsync(string name) {
            return base.Channel.GetSpecifiedPlayersAsync(name);
        }
        
        public Client.ServicePlayerReference.Player GetPlayerByNickname(string nickname) {
            return base.Channel.GetPlayerByNickname(nickname);
        }
        
        public System.Threading.Tasks.Task<Client.ServicePlayerReference.Player> GetPlayerByNicknameAsync(string nickname) {
            return base.Channel.GetPlayerByNicknameAsync(nickname);
        }
        
        public long ModifyPlayer(Client.ServicePlayerReference.Players modifiedPlayer) {
            return base.Channel.ModifyPlayer(modifiedPlayer);
        }
        
        public System.Threading.Tasks.Task<long> ModifyPlayerAsync(Client.ServicePlayerReference.Players modifiedPlayer) {
            return base.Channel.ModifyPlayerAsync(modifiedPlayer);
        }
        
        public void ModifyPasswordByEmail(string originalEmail, string newPassword) {
            base.Channel.ModifyPasswordByEmail(originalEmail, newPassword);
        }
        
        public System.Threading.Tasks.Task ModifyPasswordByEmailAsync(string originalEmail, string newPassword) {
            return base.Channel.ModifyPasswordByEmailAsync(originalEmail, newPassword);
        }
        
        public bool TheEmailIsAlreadyRegisted(string emailToSearch) {
            return base.Channel.TheEmailIsAlreadyRegisted(emailToSearch);
        }
        
        public System.Threading.Tasks.Task<bool> TheEmailIsAlreadyRegistedAsync(string emailToSearch) {
            return base.Channel.TheEmailIsAlreadyRegistedAsync(emailToSearch);
        }
        
        public bool TheNicknameIsAlreadyRegisted(string nicknameToSearch) {
            return base.Channel.TheNicknameIsAlreadyRegisted(nicknameToSearch);
        }
        
        public System.Threading.Tasks.Task<bool> TheNicknameIsAlreadyRegistedAsync(string nicknameToSearch) {
            return base.Channel.TheNicknameIsAlreadyRegistedAsync(nicknameToSearch);
        }
        
        public void DeletePlayer(string playerNickname) {
            base.Channel.DeletePlayer(playerNickname);
        }
        
        public System.Threading.Tasks.Task DeletePlayerAsync(string playerNickname) {
            return base.Channel.DeletePlayerAsync(playerNickname);
        }
    }
}
