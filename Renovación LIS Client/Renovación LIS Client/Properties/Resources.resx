<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A code has been sent to your email" xml:space="preserve">
    <value>A code has been sent to your email</value>
  </data>
  <data name="Accept friend request" xml:space="preserve">
    <value>Accept friend request</value>
  </data>
  <data name="Account made successfully" xml:space="preserve">
    <value>Account made successfully!!!</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Birth date should be before than the actual date" xml:space="preserve">
    <value>Birth date should be before than the actual date</value>
  </data>
  <data name="Birth day" xml:space="preserve">
    <value>Birth day</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Cancel friend request" xml:space="preserve">
    <value>Cancel friend request</value>
  </data>
  <data name="Cancel friendship" xml:space="preserve">
    <value>Cancel friendship</value>
  </data>
  <data name="Cancelation of friend request send made sucessfully" xml:space="preserve">
    <value>Cancelation of friend request send made sucessfully</value>
  </data>
  <data name="Cancellation of sending friend request made successfully" xml:space="preserve">
    <value>Cancellation of sending friend request made successfully!!!</value>
  </data>
  <data name="Change password" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Closing..." xml:space="preserve">
    <value>Closing...</value>
  </data>
  <data name="Code for change your password" xml:space="preserve">
    <value>Code for change your password.</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="Confirm password" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Confirm your new password" xml:space="preserve">
    <value>Confirm your new password</value>
  </data>
  <data name="Create account" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="Creation date" xml:space="preserve">
    <value>Creation date</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Do you want to exit" xml:space="preserve">
    <value>Do you want to exit?</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E mail</value>
  </data>
  <data name="Email already on use" xml:space="preserve">
    <value>Email already on use</value>
  </data>
  <data name="Email not found" xml:space="preserve">
    <value>Email not found</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="First Last Name" xml:space="preserve">
    <value>First Last Name</value>
  </data>
  <data name="For" xml:space="preserve">
    <value>For</value>
  </data>
  <data name="Forgot Password" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="Friend nickname" xml:space="preserve">
    <value>Friend nickname</value>
  </data>
  <data name="Friend request rejected" xml:space="preserve">
    <value>Friend request rejected</value>
  </data>
  <data name="Friend request sent succesfully" xml:space="preserve">
    <value>Friend request sent succesfully!!!</value>
  </data>
  <data name="Friend request successfully accepted" xml:space="preserve">
    <value>Friend request successfully accepted!!!</value>
  </data>
  <data name="Friends" xml:space="preserve">
    <value>Friends</value>
  </data>
  <data name="Friends requests" xml:space="preserve">
    <value>Friends requests</value>
  </data>
  <data name="Friendship cancellation made successfully" xml:space="preserve">
    <value>Friendship cancellation made successfully</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Has joined to the chat" xml:space="preserve">
    <value>has joined to the chat.</value>
  </data>
  <data name="Have you already have an account" xml:space="preserve">
    <value>Have you already have an account? Log In</value>
  </data>
  <data name="Introduce the code" xml:space="preserve">
    <value>Introduce the code</value>
  </data>
  <data name="Introduce this code for change your password" xml:space="preserve">
    <value>Introduce this code for change your password: </value>
  </data>
  <data name="Introduce your email" xml:space="preserve">
    <value>Introduce your email</value>
  </data>
  <data name="Invalid code" xml:space="preserve">
    <value>Invalid code</value>
  </data>
  <data name="Invalid nickname" xml:space="preserve">
    <value>Invalid nickname</value>
  </data>
  <data name="Invitation details" xml:space="preserve">
    <value>Invitation details</value>
  </data>
  <data name="Invite friends" xml:space="preserve">
    <value>Invite friends</value>
  </data>
  <data name="Left the chat" xml:space="preserve">
    <value>left the chat.</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Modify profile" xml:space="preserve">
    <value>Modify profile</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name(s)" xml:space="preserve">
    <value>Name(s)</value>
  </data>
  <data name="New Password" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="Nickname" xml:space="preserve">
    <value>Nickname</value>
  </data>
  <data name="Nickname already on use" xml:space="preserve">
    <value>Nickname already on use</value>
  </data>
  <data name="NotregisterYet" xml:space="preserve">
    <value>Not register yet? Sign Up</value>
  </data>
  <data name="Offline" xml:space="preserve">
    <value>Offline</value>
  </data>
  <data name="Online" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Password changed sucessfully!!!" xml:space="preserve">
    <value>Password changed sucessfully!!!</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Profile modified successfully!!!" xml:space="preserve">
    <value>Profile modified successfully!!!</value>
  </data>
  <data name="Profile picture" xml:space="preserve">
    <value>Profile picture</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>Received</value>
  </data>
  <data name="Reject friend request" xml:space="preserve">
    <value>Reject friend request</value>
  </data>
  <data name="Select an image" xml:space="preserve">
    <value>Select an image</value>
  </data>
  <data name="Send code" xml:space="preserve">
    <value>Send code</value>
  </data>
  <data name="Send invitation to friend" xml:space="preserve">
    <value>Send invitation to friend</value>
  </data>
  <data name="Send message" xml:space="preserve">
    <value>Send message</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Sent</value>
  </data>
  <data name="Show friends invitations" xml:space="preserve">
    <value>Show friends invitations</value>
  </data>
  <data name="Spanish" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Success!!!" xml:space="preserve">
    <value>Success!!!</value>
  </data>
  <data name="Surname(s)" xml:space="preserve">
    <value>Surname(s)</value>
  </data>
  <data name="The file shouldn't be larger than 1 MB" xml:space="preserve">
    <value>The file shouldn't be larger than 1 MB</value>
  </data>
  <data name="The introduced nickname doesn't exists" xml:space="preserve">
    <value>The introduced nickname doesn't exists</value>
  </data>
  <data name="The message shouldn't have more than 100 characters" xml:space="preserve">
    <value>The message shouldn't have more than 100 characters</value>
  </data>
  <data name="The message shouldn't have more than 80 characters" xml:space="preserve">
    <value>The message shouldn't have more than 80 characters</value>
  </data>
  <data name="The password isn't correct" xml:space="preserve">
    <value>The password isn't correct</value>
  </data>
  <data name="The passwords aren't the same" xml:space="preserve">
    <value>The passwords aren't the same</value>
  </data>
  <data name="The text fields with invalid values are" xml:space="preserve">
    <value>The text fields with invalid values are: </value>
  </data>
  <data name="The user is already logged" xml:space="preserve">
    <value>The user is already logged</value>
  </data>
  <data name="The user you want to send a friendrequest already has sent a friendrequest to you" xml:space="preserve">
    <value>The user you want to send a friendrequest already has sent a friendrequest to you.</value>
  </data>
  <data name="The user you want to sent a friend request doesn't exists" xml:space="preserve">
    <value>The user you want to sent a friend request doesn't exists</value>
  </data>
  <data name="To confirm the new password, we'll send a code to your email" xml:space="preserve">
    <value>To confirm the new password, we'll send a code to your email</value>
  </data>
  <data name="Too Bad!!!" xml:space="preserve">
    <value>Too Bad!!!</value>
  </data>
  <data name="Welcome back" xml:space="preserve">
    <value>Welcome back </value>
  </data>
  <data name="What do you want" xml:space="preserve">
    <value>What do you want?</value>
  </data>
  <data name="You already has sent a friend request to this user" xml:space="preserve">
    <value>You already has sent a friend request to this user</value>
  </data>
  <data name="You can't send a friend request to yourself" xml:space="preserve">
    <value>You can't send a friend request to yourself</value>
  </data>
  <data name="You cant't send a friend request to this user because is already your friend" xml:space="preserve">
    <value>You cant't send a friend request to this user because is already your friend</value>
  </data>
</root>