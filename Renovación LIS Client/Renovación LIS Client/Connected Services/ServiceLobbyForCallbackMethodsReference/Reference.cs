//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Renovación_LIS_Client.ServiceLobbyForCallbackMethodsReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceLobbyForCallbackMethodsReference.ILobbyCallbackMethods", CallbackContract=typeof(Renovación_LIS_Client.ServiceLobbyForCallbackMethodsReference.ILobbyCallbackMethodsCallback))]
    public interface ILobbyCallbackMethods {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/BanPlayer")]
        void BanPlayer(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/BanPlayer")]
        System.Threading.Tasks.Task BanPlayerAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/Connect")]
        void Connect(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/Connect")]
        System.Threading.Tasks.Task ConnectAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/Disconnect")]
        void Disconnect(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/Disconnect")]
        System.Threading.Tasks.Task DisconnectAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/SetAdmin")]
        void SetAdmin(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/SetAdmin")]
        System.Threading.Tasks.Task SetAdminAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/UnbanPlayer")]
        void UnbanPlayer(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/UnbanPlayer")]
        System.Threading.Tasks.Task UnbanPlayerAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyCallbackMethodsCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/ExpelPlayerFromMultiplayerGame")]
        void ExpelPlayerFromMultiplayerGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/UpdateBannedProfilesLists")]
        void UpdateBannedProfilesLists();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/UpdateConnectedProfilesLists")]
        void UpdateConnectedProfilesLists();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyCallbackMethods/UpdateConnectedProfilesForInviteToLobbyL" +
            "ists")]
        void UpdateConnectedProfilesForInviteToLobbyLists();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyCallbackMethodsChannel : Renovación_LIS_Client.ServiceLobbyForCallbackMethodsReference.ILobbyCallbackMethods, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyCallbackMethodsClient : System.ServiceModel.DuplexClientBase<Renovación_LIS_Client.ServiceLobbyForCallbackMethodsReference.ILobbyCallbackMethods>, Renovación_LIS_Client.ServiceLobbyForCallbackMethodsReference.ILobbyCallbackMethods {
        
        public LobbyCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyCallbackMethodsClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void BanPlayer(string username) {
            base.Channel.BanPlayer(username);
        }
        
        public System.Threading.Tasks.Task BanPlayerAsync(string username) {
            return base.Channel.BanPlayerAsync(username);
        }
        
        public void Connect(string username) {
            base.Channel.Connect(username);
        }
        
        public System.Threading.Tasks.Task ConnectAsync(string username) {
            return base.Channel.ConnectAsync(username);
        }
        
        public void Disconnect(string username) {
            base.Channel.Disconnect(username);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(string username) {
            return base.Channel.DisconnectAsync(username);
        }
        
        public void SetAdmin(string username) {
            base.Channel.SetAdmin(username);
        }
        
        public System.Threading.Tasks.Task SetAdminAsync(string username) {
            return base.Channel.SetAdminAsync(username);
        }
        
        public void UnbanPlayer(string username) {
            base.Channel.UnbanPlayer(username);
        }
        
        public System.Threading.Tasks.Task UnbanPlayerAsync(string username) {
            return base.Channel.UnbanPlayerAsync(username);
        }
    }
}
