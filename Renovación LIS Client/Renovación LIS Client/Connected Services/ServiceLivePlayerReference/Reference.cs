//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Renovación_LIS_Client.ServiceLivePlayerReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceLivePlayerReference.ILivePlayer", CallbackContract=typeof(Renovación_LIS_Client.ServiceLivePlayerReference.ILivePlayerCallback))]
    public interface ILivePlayer {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILivePlayer/Join")]
        void Join(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILivePlayer/Join")]
        System.Threading.Tasks.Task JoinAsync(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILivePlayer/Leave")]
        void Leave(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILivePlayer/Leave")]
        System.Threading.Tasks.Task LeaveAsync(string playerName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILivePlayerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILivePlayer/UpdatePlayersList")]
        void UpdatePlayersList(string[] players);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILivePlayerChannel : Renovación_LIS_Client.ServiceLivePlayerReference.ILivePlayer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LivePlayerClient : System.ServiceModel.DuplexClientBase<Renovación_LIS_Client.ServiceLivePlayerReference.ILivePlayer>, Renovación_LIS_Client.ServiceLivePlayerReference.ILivePlayer {
        
        public LivePlayerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LivePlayerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LivePlayerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LivePlayerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LivePlayerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Join(string playerName) {
            base.Channel.Join(playerName);
        }
        
        public System.Threading.Tasks.Task JoinAsync(string playerName) {
            return base.Channel.JoinAsync(playerName);
        }
        
        public void Leave(string playerName) {
            base.Channel.Leave(playerName);
        }
        
        public System.Threading.Tasks.Task LeaveAsync(string playerName) {
            return base.Channel.LeaveAsync(playerName);
        }
    }
}
