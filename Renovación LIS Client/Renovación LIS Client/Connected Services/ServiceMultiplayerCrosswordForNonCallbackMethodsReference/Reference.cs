//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Renovación_LIS_Client.ServiceMultiplayerCrosswordForNonCallbackMethodsReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceMultiplayerCrosswordForNonCallbackMethodsReference.IMultiplayerCrosswordNo" +
        "nCallbackMethods")]
    public interface IMultiplayerCrosswordNonCallbackMethods {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/GetAdmin", ReplyAction="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/GetAdminResponse")]
        string GetAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/GetAdmin", ReplyAction="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/GetAdminResponse")]
        System.Threading.Tasks.Task<string> GetAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/GetPointsFromAProfile", ReplyAction="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/GetPointsFromAProfileR" +
            "esponse")]
        int GetPointsFromAProfile(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/GetPointsFromAProfile", ReplyAction="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/GetPointsFromAProfileR" +
            "esponse")]
        System.Threading.Tasks.Task<int> GetPointsFromAProfileAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/SetAdmin", ReplyAction="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/SetAdminResponse")]
        void SetAdmin(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/SetAdmin", ReplyAction="http://tempuri.org/IMultiplayerCrosswordNonCallbackMethods/SetAdminResponse")]
        System.Threading.Tasks.Task SetAdminAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMultiplayerCrosswordNonCallbackMethodsChannel : Renovación_LIS_Client.ServiceMultiplayerCrosswordForNonCallbackMethodsReference.IMultiplayerCrosswordNonCallbackMethods, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MultiplayerCrosswordNonCallbackMethodsClient : System.ServiceModel.ClientBase<Renovación_LIS_Client.ServiceMultiplayerCrosswordForNonCallbackMethodsReference.IMultiplayerCrosswordNonCallbackMethods>, Renovación_LIS_Client.ServiceMultiplayerCrosswordForNonCallbackMethodsReference.IMultiplayerCrosswordNonCallbackMethods {
        
        public MultiplayerCrosswordNonCallbackMethodsClient() {
        }
        
        public MultiplayerCrosswordNonCallbackMethodsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MultiplayerCrosswordNonCallbackMethodsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplayerCrosswordNonCallbackMethodsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplayerCrosswordNonCallbackMethodsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetAdmin() {
            return base.Channel.GetAdmin();
        }
        
        public System.Threading.Tasks.Task<string> GetAdminAsync() {
            return base.Channel.GetAdminAsync();
        }
        
        public int GetPointsFromAProfile(string nickname) {
            return base.Channel.GetPointsFromAProfile(nickname);
        }
        
        public System.Threading.Tasks.Task<int> GetPointsFromAProfileAsync(string nickname) {
            return base.Channel.GetPointsFromAProfileAsync(nickname);
        }
        
        public void SetAdmin(string username) {
            base.Channel.SetAdmin(username);
        }
        
        public System.Threading.Tasks.Task SetAdminAsync(string username) {
            return base.Channel.SetAdminAsync(username);
        }
    }
}
